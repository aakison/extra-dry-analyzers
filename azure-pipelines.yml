# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- main
- release
- develop

pool:
  vmImage: 'ubuntu-latest'

variables:
  - name: buildConfiguration
    value: 'Release'
  - name: projectsGlob
    value: '**/ExtraDry.@(Analyzers|Analyzers.CodeFixes|Analyzers.Test|Analyzers.Package).csproj' 
  - name: isForDeployment
    value: $[in(variables['Build.SourceBranch'], 'refs/heads/main', 'refs/heads/develop', 'refs/heads/release')]
  # Semantic Version details
  - name: majorMinorVersion
    value: '1.0'
  - name: patchVersion
    value: $[counter(variables['majorMinorVersion'], 0)]
  # The 'pre-alpha' name covers instances where the CI process has been manually triggered from a
  # feature branch.  This covers instances where a developer wants to test the CI process or their
  # feature changes outside of their local development environment.
  - name: prereleaseVersion
    value: '-pre-alpha'
  - name: latestTag
    value: 'latest-pre-alpha'
  - ${{ if eq(variables['Build.SourceBranchName'], 'develop') }}: 
    - name: prereleaseVersion
      value: '-alpha'
    - name: latestTag
      value: 'latest-alpha'
  - ${{ if eq(variables['Build.SourceBranchName'], 'release') }}: 
    - name: prereleaseVersion
      value: '-beta'
    - name: latestTag
      value: 'latest-beta'
  - ${{ if eq(variables['Build.SourceBranchName'], 'main') }}: 
    - name: prereleaseVersion
      value: ''
    - name: latestTag
      value: 'latest'
  - name: semanticVersion
    value: $[format('{0}.{1}{2}', variables['majorMinorVersion'], variables['patchVersion'], variables['prereleaseVersion'])]
  - name: revisionSuffix
    value: $[replace(variables['semanticVersion'], '.', '-')]

steps:
- task: UseDotNet@2
  displayName: 'Install .NET 8.0 SDK'
  inputs:
    version: '8.0.x'

- task: DotNetCoreCLI@2
  displayName: Restore
  inputs:
    command: restore
    projects: $(projectsGlob)

- task: PowerShell@2
  name: CheckVulnerability
  displayName: 'Check NuGet Packages for Vulnerabilities'
  inputs:
    targetType: 'inline'
    script: |
      $global:failedLines = 0;
      Function Scan-Line-For-Vulnerability {
        [CmdletBinding()]
        Param([Parameter(ValueFromPipeline)] $line)
        process {
          Write-Host $line
          if($line.Contains("Moderate") -OR $line.Contains("High")) {
            $global:failedLines = $global:failedLines + 1
          }
        }
      }
      dotnet list ExtraDry.Analyzers\ExtraDry.Analyzers package --vulnerable --include-transitive | Scan-Line-For-Vulnerability
      dotnet list ExtraDry.Analyzers\ExtraDry.Analyzers.CodeFixes package --vulnerable --include-transitive | Scan-Line-For-Vulnerability
      dotnet list ExtraDry.Analyzers\ExtraDry.Analyzers.Package package --vulnerable --include-transitive | Scan-Line-For-Vulnerability
      if($global:failedLines > 0) {
        Write-Host
        Write-Host "Vulnerabilities in dependant package have been found, please upgrade or replace." -ForegroundColor Red
        exit 1
      }

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    projects: $(projectsGlob)
    arguments: '--configuration $(BuildConfiguration) --no-restore'

- task: DotNetCoreCLI@2
  displayName: Test
  inputs:
    command: test
    projects: '**/*Test/*.csproj'
    arguments: '--configuration $(BuildConfiguration) --no-build'
    
- task: DotNetCoreCLI@2
  displayName: Pack
  condition: and(succeeded(), eq(variables.isForDeployment, true))
  inputs:
    command: 'pack'
    packagesToPack: '**/ExtraDry.Analyzers.Package/*.csproj'
    versioningScheme: 'byEnvVar'
    versionEnvVar: 'semanticVersion'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  condition: and(succeeded(), eq(variables.isForDeployment, true))
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'
